;;; -*- Mode: LISP; Package: :cl-user; BASE: 10; Syntax: ANSI-Common-Lisp; -*-
;;;
;;;   Time-stamp: <>
;;;   Touched: Mon Dec 20 11:35:11 2010 +0530 <enometh@meer.net>
;;;   Bugs-To: enometh@meer.net
;;;   Status: Experimental.  Do not redistribute
;;;   Copyright (C) 2010 Madhu.  All Rights Reserved.
;;;
;;; ;madhu 101220 "Packages/usocket-svn-r569/"
;;; ;madhu 191210 "usocket-0.8.2"
(in-package "CL-USER")

(defvar *usocket-source-dir*
  (merge-pathnames "usocket/" (translate-logical-pathname "EXTERN:")))

(defvar *usocket-binary-dir* (binary-directory *usocket-source-dir*))

;;; NOTE: the key "art" here is, no need to recompile any file when switching
;;; between a native backend and IOlib backend. -- Chun Tian (binghe)

;;#+sample - force iolib. ccl backend is not reliable ;madhu 200116
;;#-(or ccl mkcl ecl) 
;;(pushnew :usocket-iolib *features*)

(mk:defsystem :usocket
  :source-pathname *usocket-source-dir*
  :binary-pathname *usocket-binary-dir*
  :source-extension "lisp"
  :depends-on (:split-sequence
	       (:feature (:and (:or :sbcl
				:ecl
				:clasp)
			  (:not :usocket-iolib))
		:sb-bsd-sockets)
	       (:feature :usocket-iolib :iolib))
  :components ((:file "package")
	       (:module "vendor"
		:depends-on ("package")
		:components ((:file "kqueue"
			      :if-feature :mcl
			      )
			     (:file "OpenTransportUDP"
			     :if-feature :mcl
			      )))
	       (:file "usocket"
		:depends-on ("vendor"))
	       (:file "condition"
		:depends-on ("usocket"))
	       (:module "backend"
		:depends-on ("condition")
		:components ((:file "iolib"
			      :if-feature :usocket-iolib)
			     (:file "abcl"
			      :if-feature (:and :abcl (:not :usocket-iolib)))
			     (:file "allegro"
			      :if-feature (:and (:or :allegro :cormanlisp) (:not :usocket-iolib)))
			     (:file "clisp"
			      :if-feature (:and :clisp (:not :usocket-iolib)))
			     (:file "openmcl"
			      :if-feature (:and (:or :openmcl :clozure) (:not :usocket-iolib)))
			     (:file "clozure"
			      :if-feature (:and :clozure (:not :usocket-iolib))
			      :depends-on ("openmcl"))
			     (:file "cmucl"
			      :if-feature (:and :cmu (:not :usocket-iolib)))
			     (:file "sbcl"
			      :if-feature (:and (:or :sbcl :ecl :clasp) (:not :usocket-iolib)))
			     (:file "ecl"
			      :if-feature (:and :ecl (:not :usocket-iolib))
			      :depends-on ("sbcl"))
			     (:file "clasp"
			      :if-feature (:and :clasp (:not :usocket-iolib))
			      :depends-on ("sbcl"))
			     (:file "lispworks"
			      :if-feature (:and :lispworks (:not :usocket-iolib)))
			     (:file "mcl"
			      :if-feature (:and :mcl (:not :usocket-iolib)))
			     (:file "mocl"
			      :if-feature (:and :mocl (:not :usocket-iolib)))
			     (:file "scl"
			      :if-feature (:and :scl (:not :usocket-iolib)))
			     (:file "genera"
			      :if-feature (:and :genera (:not :usocket-iolib)))
			     (:file "mezzano"
			      :if-feature (:and :mezzano))))
	       (:file "option"
		:if-feature (:not :usocket-iolib)
		:depends-on ("backend"))))

#+nil
(mk:oos :usocket :load :compile-during-load t)

(mk:defsystem :usocket-server
  :source-pathname *usocket-source-dir*
  :binary-pathname *usocket-binary-dir*
  :source-extension "lisp"
  :depends-on (:usocket :bordeaux-threads)
  :components ((:file "server")))

#+nil
(mk:oos :usocket-server :load :compile-during-load t)

(mk:defsystem :usocket-test
  :source-pathname *usocket-source-dir*
  :binary-pathname *usocket-binary-dir*
  :source-extension "lisp"
  :depends-on (:usocket-server :rt)
  :components ((:module "tests"
		:components ((:file "package")
			     (:file "test-usocket")
			     (:file "test-condition")
			     (:file "test-datagram")
			     (:file "test-timeout")
			     (:file "wait-for-input")))))

#+nil
(mk:oos :usocket-test :load :compile-during-load t)

#+nil
(usocket-test::do-tests)
